<?xml version="1.0"?>
<launch>
  <arg name="simulation" default="true" />
  
  <!-- load robot description -->
  <param name="robot_description"
    command="$(find xacro)/xacro '$(find hdt_6dof_a24_pincer_description)/urdf/hdt_arm_limit.xacro'" />

  <!-- load the hardware configuration -->
  <rosparam command="load" file="$(find hdt_6dof_a24_pincer_description)/config/hardware.yaml" />
  
  <!-- load the controller configuration -->
  <rosparam command="load" file="$(find hdt_6dof_a24_pincer_description)/config/controllers.yaml" />

  <!-- <rosparam command="load" file="$(find hdt_6dof_a24_pincer_moveit)/config/fake_controllers.yaml" if="$(arg simulation)" /> -->

    
  <!-- load the serial nodes -->
  <node name="serial_node" pkg="rosserial_python" type="serial_node.py" respawn="true" output="screen" args="tcp 11411" unless="$(arg simulation)"/>
  <node name="rosserial_message_info" pkg="rosserial_python" type="message_info_service.py" unless="$(arg simulation)"/>


  <!-- load the hardware interface -->
  <node name="adroit_control" pkg="hdt_adroit_control" type="adroit_control" respawn="false" output="screen">
    <param name="robot_name" value="hdt_arm" /> 
    <param name="fake_execution" value="$(arg simulation)" /> 
  </node>

  <!-- <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" if="$(arg simulation)">   -->
    <!-- <rosparam param="source_list">[move_group/fake_controller_joint_states]</rosparam> -->
  <!-- </node> -->


  <!-- load and start controllers for trajectory control-->
  <node name="controller_manager_spawn" pkg="controller_manager" type="controller_manager" respawn="false" output="screen" args="spawn 
  /hdt_arm/joint_state_controller 
  /hdt_arm/arm_controller 
  /hdt_arm/pincer_joint_position_controller"/>

  <!-- load but do not start controllers for joint by joint control-->
  <node name="controller_manager_load" pkg="controller_manager" type="controller_manager" respawn="false" output="screen" args="load 
  /hdt_arm/joint1_position_controller 
  /hdt_arm/joint2_position_controller 
  /hdt_arm/joint3_position_controller 
  /hdt_arm/joint4_position_controller 
  /hdt_arm/joint5_position_controller 
  /hdt_arm/joint6_position_controller 
  /hdt_arm/joint1_velocity_controller 
  /hdt_arm/joint2_velocity_controller 
  /hdt_arm/joint3_velocity_controller 
  /hdt_arm/joint4_velocity_controller 
  /hdt_arm/joint5_velocity_controller 
  /hdt_arm/joint6_velocity_controller 
  /hdt_arm/pincer_joint_velocity_controller" />


  <!-- publish tf for the robot links -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" />

  <!-- start move group  -->
  <include file="$(find hdt_6dof_a24_pincer_moveit)/launch/move_group.launch">
    <arg name="allow_trajectory_execution" value="true"/>
    <arg name="info" value="true"/>
    <arg name="fake_execution" value="false"/>
  </include>

  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find adroit_move)/rviz/basic.rviz"/>

  <!-- load yaml file into rosparam -->
  <rosparam command="load" file="$(find adroit_move)/config/basic_control.yaml" />

  <!--publish a static transform from world to odom-->
  <node pkg="tf" type="static_transform_publisher" name="camera_tag" args="0.282, 0.473, 1.576 -0.122, 0.935, -0.330, 0.055 camera_depth_optical_frame TAG1 100"/>  
  <node pkg="tf" type="static_transform_publisher" name="tag_baselink" args="0 0.37 0.44 0 0 0 1 TAG1 base_link 100"/>  
  <!--publish a static transform from world to odom-->
  <node pkg="tf" type="static_transform_publisher" name="ee_camera" args="0 0 0 0 0 0 1 endpoint_link object 100"/>    
</launch>